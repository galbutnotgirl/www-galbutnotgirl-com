/*!
 * contentstack-express
 * copyright (c) Built.io Contentstack
 * MIT Licensed
 */

'use strict';

/**
 * Module Dependencies.
 */
var _ = require('lodash'),
    context = require('./../../context'),
    datastore = require('./../providers/index'),
    helper = require('./../helper'),
    Inmemory = require('./../inmemory/index');

var Entry = function(uid) {
    if(typeof uid == "string" && uid) this._uid = uid;
    this.object = {};
}

Entry.prototype.insert = function(data) {
    this._operation = "insert";
    if(this.content_type_id) {
        this.object['_data'] = data;
    } else {
        console.error("Please provide 'content_type_id' to insert the data.");
    }
    return this;
};

Entry.prototype.upsert = function(data) {
    this._operation = "upsert";
    if(this.content_type_id) {
        this.object['_data'] = data;
    } else {
        console.error("Please provide 'content_type_id' to upsert the data.");
    }
    return this;
};

Entry.prototype.remove = function() {
    this._operation = "remove";
    return this;
};

Entry.prototype.then = function(success, error) {
    try {
        var self = this;
        // setting the locale
        this._locale = this._locale || context.get("locale") || "en-us";

        // merge query in object
        if(this._query) this.object = _.merge(this.object, this._query);

        var _query = _.clone(this.object, true);

        var callback = function(err, data) {
            if(!err) {
                success(data);
            } else if(error && typeof error == "function") {
                error(err);
            } else {
                console.error("Error : ", err.message)
            }
        };

        if(!_query._bulk_insert) {
            if(self._operation == "upsert" || self._operation == "insert") {
                // building the query
                _query = _.merge(_query, {_content_type_uid: self.content_type_id, locale: self._locale});

                if(self._uid || (_query._data && _query._data.uid)) _query._uid = self._uid || _query._data.uid;
                // executing the specified operations
                datastore[self._operation](_query, callback);
            } else {
                // filtering the query if any reference data exists
                helper.queryBuilder(_query, this._locale, this.content_type_id, function(err, resultQuery) {
                    if (err) throw err;
                    _query = resultQuery;

                    // building the query
                    _query = _.merge(_query, {_content_type_uid: self.content_type_id, locale: self._locale});

                    if(self._uid || (_query._data && _query._data.uid)) _query._uid = self._uid || _query._data.uid;
                    // executing the specified operations
                    datastore[self._operation](_query, callback);
                });
            }
        } else {
            _query = _.merge(_query, {_content_type_uid: self.content_type_id, locale: self._locale});
            datastore["bulkInsert"](_query, callback);
        }
    } catch(err) {
        if(error && typeof error == "function") {
            error(err);
        } else {
            console.error("Error is not function: ", err.message);
        }
    }

}

module.exports = Entry;
